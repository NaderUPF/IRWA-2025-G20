1.3

Use a hybrid approach: index each field separately (category, sub_category, brand, product_details, seller) with field-appropriate analyzers and types, and also maintain a single concatenated "all_text" or "catch_all" field (copy of the important fields) for general free-text queries.
Treat category/sub_category and brand and seller primarily as structured/faceted fields (keyword values, hierarchical where appropriate) for filtering, faceting and precise matching. Treat product_details as full-text. Use targeted analyzers, boosting, and an autocomplete/ngram field where useful.
Why (summary)

Separate fields preserve structure and permit precise filtering, faceting, and field-specific boosting — this improves precision for typical e‑commerce searches (brand/category filters are common).
A combined field improves recall and simplifies handling free-form queries that don’t specify where terms should match.
Field-specific analyzers let you treat brand and category as keywords (exact, normalized lookup), while product_details benefits from full-text tokenization, stopword handling and possibly synonym expansion.



1.4

These fields should be handled as structured data types, not as text terms, since they represent specific numeric values and boolean states that are better suited for filtering, sorting, and range queries.